# Spring App
spring.application.name=digital-aggregator-service
spring.profiles.active=docker
spring.config.import=optional:configserver:http://config-server:8888/
spring.cloud.compatibility-verifier.enabled=false

# Server Port
server.port=8083
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# Logging
logging.level.org.springframework=INFO
logging.level.org.springframework.boot.context.config=DEBUG
logging.level.org.springframework.web.client=DEBUG
logging.level.org.springframework.security.web=DEBUG

# Swagger
springdoc.api-docs.enabled=true
springdoc.packagesToScan=com.example.dynamic_spec_service.controller
springdoc.pathsToMatch=/**

# Eureka / Discovery (Docker service name)
eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka/
eureka.instance.prefer-ip-address=true

# Kafka (Docker service name)
spring.kafka.bootstrap-servers=kafka:9092

# Consumer config
spring.kafka.consumer.group-id=aggregator-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.digital_aggregator_service.domain.dto.response

spring.kafka.consumer.properties.spring.json.type.mapping=\
  DynamicSpecProducerResponseDto:com.example.digital_aggregator_service.domain.dto.response.DynamicSpecProducerResponseDto,\
  StaticSpecProducerResponseDto:com.example.digital_aggregator_service.domain.dto.response.StaticSpecProducerResponseDto
# Reduce Kafka logging noise
logging.level.org.apache.kafka=WARN
logging.level.org.springframework.kafka=WARN
logging.level.com.example.digital_aggregator_service=INFO